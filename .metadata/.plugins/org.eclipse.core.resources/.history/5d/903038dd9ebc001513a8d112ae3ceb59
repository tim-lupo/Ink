import java.util.ArrayList;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;
import java.io.*;

public class Parser {
	
	private ArrayList<String> tokens;
	private Dictionary dic;
	
	public Parser(ArrayList<String> tokens) throws ScriptException {
		super();
		this.tokens = tokens;
		parse(tokens);
	}

	public void parse (ArrayList<String> tokens) throws ScriptException {
		int i = 0; //position of index
		for (String tok : tokens) { //loop through the tokens
			if (tok.compareTo("<EOL>") == 0) { //if its the end of the line
			} else if (tok.toLowerCase().compareTo("var") == 0) { //if it finds a var declaration
				if ((dic.isName(tokens.get(i+1)) == true) && (dic.isVariable(tokens.get(i+1)) == false) && (tokens.get(i+2).compareTo("=") == 0)) {
					Variable var = new Variable(tokens.get(i+1), tokens.get(i+3));
					dic.vars.add(var);
				} else {
					System.out.println("INK ERROR: invalid variable declaration");;
				}
			} else if (tok.toLowerCase().compareTo("func") == 0) { //if it finds a func declaration
				if ((dic.isName(tokens.get(i+1)) == true) && (dic.isFunction(tokens.get(i+1)) == false) && (dic.isParameter(tokens.get(i+2)) == true) && (tokens.get(i+3).compareTo("{") == 0)) {
					/*ArrayList<String> contents = new ArrayList<String>();
					boolean isArg = true;
					for (int n=i+4; isArg == true; n++) {
						if (tokens.get(n).compareTo("}") == 0) { isArg = false; break; }
					}
					Function f = new Function(tokens.get(i+1), tokens.get(i+2), contents);
					dic.addFunc(f);
					System.out.println(f.toString());*/
				} else {
					System.out.println("INK ERROR: invalid function declaration");
				}
			} else if (tok.compareTo("print") == 0) { //if it finds a print declaration
				String value = tokens.get(i+1);
				try {
					System.out.println(value);
		            System.out.print(eval(dic.reparseVar(value+"~")));
				} catch (ScriptException se) {
					System.out.println("INK ERROR: invalid print statement");
					System.out.println("\tCannot compute: " + tokens.get(i+1));
				}
			} else if (tok.toLowerCase().compareTo("println") == 0) { //if it finds a print declaration
				String value = tokens.get(i+1);
				try {
		            System.out.println(eval(dic.reparseVar(value+"~")));
				} catch (ScriptException se) {
					System.out.println("INK ERROR: invalid print statement");
					System.out.println("\tCannot compute: " + tokens.get(i+1));
				}
			} else if ((dic.isVariable(tok))) {
				if ((tokens.get(i-1).compareTo("var") != 0) && (dic.findVariable(tok)>=0)) {
					dic.vars.get(dic.findVariable(tok)).setValue(tokens.get(i+2));
				}
			} else if (tok.toLowerCase().compareTo("if") == 0) {
				String value = "";
				try {
		            value = eval(dic.reparseVar(tokens.get(i+1)+"~"));
		            if (value.compareTo("true") == 0) {
		            	ArrayList<String> contents = new ArrayList<String>();
						boolean isArg = true;
						for (int n=i+4; isArg == true; n++) {
							if (tokens.get(n).compareTo("}") == 0) { isArg = false; break; }
							else { contents.add(tokens.get(n)); }
						}
						dic.reparse(contents);
					} else if (value.compareTo("false") == 0) {} 
					else { System.out.println("INK ERROR: invalid if statement (cannot compare " + value + ")"); }
				} catch (ScriptException se) {
					System.out.println("INK ERROR: invalid if statement");
					System.out.println("\tCannot compute: " + tokens.get(i+1));
				}
			}
			i++;
		}
	}
	
	//Evaluate value
	public String eval(Object value) throws ScriptException {
		Value val = new Value();
		Object obj = val.evaluate(value.toString());
		String str = obj.toString();
		return str;
	}
}