import java.util.ArrayList;

public class Parser {
	
	private static char[] symbols = {'(', ')', '{', '}', '=', '+', '-', '*', '/', '"', '\''};
	private static ArrayList<String> tokens = new Lexer().lex(new Input("test.ink").readFile());
	private static ArrayList<Variable> vars = new ArrayList<Variable>();
	
	public static void main (String[] args) {
		//System.out.println(tokens);
		parse(tokens);
	}
	
	public static void parse (ArrayList<String> tokens) {
		int i = 0; //position of index
		for (String tok : tokens) { //loop through the tokens
			if (tok.compareTo("var") == 0) { //if it finds a var declaration
				if ((isName(tokens.get(i+1)) == true) && (tokens.get(i+2).compareTo("=") == 0)) {
					Variable var = new Variable(tokens.get(i+1), tokens.get(i+3));
					vars.add(var);
				} else {
					System.out.println("INK ERROR: invalid variable declaration");;
				}
			} else if (tok.compareTo("func") == 0) {
				if ((isName(tokens.get(i+1)) == true) && (tokens.get(i+3).compareTo("{") == 0) && (isParameter(tokens.get(i+2)) == true)) {
					System.out.println("valid func found");
				}
				else {
					System.out.println("INK ERROR: invalid function declaration");
				}
			}
			i++;
		}
	}
	
	//Check if valid name (no invalid characters in name)
	private static boolean isName (String value) {
		char[] toks = value.toCharArray();
		boolean valid = true;
		for (char tok : toks) {
			for (char symbol : symbols) {
				if (tok == symbol) {
					valid = false;
				}
			}
		}
		return valid;
	}
	
	//Check if valid parameter list
	private static boolean isParameter(String value) {
		char[] toks = value.toCharArray();
		boolean valid = true;
		if (toks[0] != '(' || toks[toks.length-1] != ')') {
			valid = false;
		}
		return valid;
	}
	
	//Parse parameter list
}
